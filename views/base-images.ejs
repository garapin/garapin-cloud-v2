<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Garapin Cloud - Base Images</title>
    <!-- Use allowed CDN (jsdelivr) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .tooltip-inner {
            background-color: #ffd700 !important;
            color: #000 !important;
            font-size: 0.75rem;
            padding: 4px 8px;
        }
        .tooltip.bs-tooltip-bottom .tooltip-arrow::before {
            border-bottom-color: #ffd700 !important;
        }
        .version-badge {
            cursor: help;
        }
    </style>
    <%- include('partials/firebase-sdk') %>
    <script>
        // Simple Firebase initialization
        function initFirebase() {
            const configElement = document.querySelector('[data-firebase-config]');
            if (!configElement) return null;
            
            const firebaseConfig = JSON.parse(configElement.dataset.firebaseConfig);
            return firebase.apps.length ? firebase.apps[0] : firebase.initializeApp(firebaseConfig);
        }

        // Main initialization
        async function initialize() {
            try {
                // Initialize Firebase
                const app = initFirebase();
                if (!app) {
                    console.warn('Firebase initialization failed');
                    return;
                }

                // Setup auth state listener
                firebase.auth().onAuthStateChanged(async function(user) {
                    if (user) {
                        try {
                            const token = await user.getIdToken();
                            // Fetch the page with auth header
                            const response = await fetch(window.location.pathname, {
                                headers: {
                                    'Authorization': `Bearer ${token}`
                                }
                            });
                            if (response.ok) {
                                const html = await response.text();
                                // Create a temporary container
                                const temp = document.createElement('div');
                                temp.innerHTML = html;
                                
                                // Only update the baseImagesContainer content
                                const newContent = temp.querySelector('#baseImagesContainer');
                                const currentContent = document.querySelector('#baseImagesContainer');
                                if (newContent && currentContent) {
                                    currentContent.innerHTML = newContent.innerHTML;
                                    initializeTooltips();
                                }
                            }
                        } catch (error) {
                            console.warn('Error refreshing content:', error);
                        }
                    }
                });

                // Initialize tooltips
                initializeTooltips();
            } catch (error) {
                console.warn('Initialization error:', error);
            }
        }

        // Initialize tooltips
        function initializeTooltips() {
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            [...tooltipTriggerList].forEach(el => new bootstrap.Tooltip(el));
        }

        // Start initialization when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initialize);
        } else {
            initialize();
        }
    </script>
</head>
<body>
    <div class="container-fluid" data-firebase-config='<%= JSON.stringify(firebaseConfig) %>'>
        <div class="row">
            <%- include('partials/sidebar', {currentPage: 'base-images'}) %>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 bg-light">
                <%- include('partials/header', {pageTitle: 'Base Images'}) %>

                <!-- Information Box -->
                <div class="alert mb-4" role="alert" style="background-color: #6C7DFF; color: rgba(255, 255, 255, 0.9); border: none;">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-info-circle-fill me-2 fs-5"></i>
                        <div>
                            A base image serves as the foundational layer for publishing applications. Once created, these images are universally accessible, allowing all users to use them as a standardized framework for deploying applications efficiently.
                        </div>
                    </div>
                </div>

                <!-- Search Bar -->
                <div class="row mb-4">
                    <div class="col-12">
                        <input type="text" class="form-control" placeholder="Search base images..." id="searchBaseImages">
                    </div>
                </div>

                <!-- AI Image Builder Button -->
                <div class="row mb-4">
                    <div class="col-12">
                        <button class="btn" style="background-color: #6C7DFF; color: white;" data-bs-toggle="modal" data-bs-target="#aiBuilderModal">
                            <i class="bi bi-robot"></i>
                            AI Image Builder <sup style="font-size: 0.6em; opacity: 0.8;">beta</sup>
                        </button>
                    </div>
                </div>

                <!-- Base Images Grid -->
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4" id="baseImagesContainer">
                    <% if (baseImages && baseImages.length > 0) { %>
                        <% baseImages.forEach(image => { %>
                            <div class="col">
                                <div class="card h-100">
                                    <div class="card-body p-2">
                                        <div class="d-flex flex-column">
                                            <div class="d-flex mb-1">
                                                <div class="flex-shrink-0" style="width: 80px;">
                                                    <% if (image.thumbnailURL) { %>
                                                        <img src="<%= image.thumbnailURL %>" alt="<%= image.base_image %>" 
                                                            class="img-fluid" style="height: 60px; width: 100%; object-fit: contain;">
                                                    <% } else { %>
                                                        <div class="d-flex justify-content-center align-items-center" 
                                                            style="height: 60px; width: 100%; background-color: #f8f9fa; border-radius: 8px;">
                                                            <span class="display-6 text-muted">
                                                                <%= image && image.base_image ? image.base_image.charAt(0).toUpperCase() : '' %>
                                                            </span>
                                                        </div>
                                                    <% } %>
                                                </div>
                                                <div class="flex-grow-1 ms-3">
                                                    <h5 class="card-title mb-1" style="font-size: 1rem;">
                                                        <%= image.base_image %>
                                                    </h5>
                                                    <div class="mb-1">
                                                        <span class="badge bg-primary version-badge" 
                                                            data-bs-toggle="tooltip" 
                                                            data-bs-placement="bottom" 
                                                            title="<%= image.version || 'latest' %>">
                                                            <i class="bi bi-tag-fill me-1"></i>
                                                            <%= image.version ? (image.version.includes(':') ? image.version.split(':')[1] : image.version) : 'latest' %>
                                                            <i class="bi bi-info-circle-fill ms-1" style="font-size: 0.75rem;"></i>
                                                        </span>
                                                    </div>
                                                    <p class="card-text text-muted small mb-0" style="font-size: 0.8rem;">
                                                        <%= image.description %>
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="d-flex flex-wrap gap-2 mt-1">
                                                <% if (image.database_server && image.database_server.trim() !== '' && image.database_server !== 'null' && image.database_server !== 'none') { %>
                                                    <span class="badge bg-info">
                                                        <span class="material-symbols-outlined" style="font-size: 14px; vertical-align: -2px;">database</span>
                                                        <%= image.database_server %>
                                                    </span>
                                                <% } %>
                                            </div>
                                            <% 
                                                console.log('User:', user ? user.provider_uid : 'No user');
                                                console.log('Image user_id:', image.user_id);
                                                if (user && user.provider_uid === image.user_id) { 
                                            %>
                                                <div class="mt-2">
                                                    <button class="btn btn-sm rebuild-btn" 
                                                        style="background-color: white; color: #6C7DFF; border: 1px solid #6C7DFF; transition: all 0.3s;"
                                                        onmouseover="this.style.backgroundColor='#6C7DFF'; this.style.color='white';"
                                                        onmouseout="this.style.backgroundColor='white'; this.style.color='#6C7DFF';"
                                                        data-image='<%- JSON.stringify({_id:image._id,base_image:image.base_image,version:image.version,StorageSize:image.StorageSize || "1Gi"}) %>'
                                                        onclick="console.log('Button clicked', this.dataset.image); handleRebuildClick.call(this);">
                                                        <i class="bi bi-arrow-clockwise me-1"></i>
                                                        Rebuild
                                                    </button>
                                                </div>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div style="width: 100%; margin: 1rem 0;">
                            <div class="alert alert-info d-flex align-items-center justify-content-center py-3" style="min-height: 100px;">
                                <div class="text-center">
                                    <i class="bi bi-info-circle me-2 fs-4"></i>
                                    <p class="fs-5 mb-0">No base images available at the moment.</p>
                                </div>
                            </div>
                        </div>
                    <% } %>
                </div>
            </main>
        </div>
    </div>

    <!-- Toast Container -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="baseImageToast" class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body"></div>
                <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <!-- Loading Modal -->
    <div class="modal fade" id="loadingModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center p-4">
                    <div class="mb-3">
                        <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                    <h5 id="loadingModalMessage" class="mb-0">Image is rebuilding, please wait...</h5>
                </div>
            </div>
        </div>
    </div>

    <!-- AI Builder Modal -->
    <div class="modal fade" id="aiBuilderModal" tabindex="-1" aria-labelledby="aiBuilderModalLabel" aria-hidden="true" 
        data-create-url="<%= createBaseImageAIURL %>">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="aiBuilderModalLabel">Build Base Image with AI</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="aiBuilderForm">
                        <!-- Base Image Name -->
                        <div class="mb-3">
                            <label for="baseImageName" class="form-label">Base Image Name</label>
                            <input type="text" class="form-control" id="baseImageName" required>
                            <div id="baseImageError" class="form-text" style="color: #dc3545; display: none;">
                                Image not found on Dockerhub.
                            </div>
                        </div>

                        <!-- Version -->
                        <div class="mb-3">
                            <label for="version" class="form-label">Version</label>
                            <input type="text" class="form-control" id="version">
                            <div class="form-text" style="font-size: 0.75rem; color: #198754;">
                                <i class="bi bi-info-circle me-1"></i>
                                Enter a version or leave blank for the latest. Check Docker Hub for available versions.
                            </div>
                        </div>
                        
                        <!-- Storage Size Slider -->
                        <div class="mb-3">
                            <label for="storageSize" class="form-label">Storage Size (GB)</label>
                            <div class="d-flex align-items-center gap-3">
                                <input type="range" class="form-range flex-grow-1" id="storageSize" 
                                    min="1" max="10" step="1" value="1">
                                <span id="storageSizeValue" class="badge bg-primary" style="width: 35px;">1</span>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="buildImage()">Build Image</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/controllers/headerController.js"></script>
    <script src="/js/controllers/baseImagesController.js"></script>
</body>
</html> 